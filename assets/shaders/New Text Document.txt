float maxStrength = 0.5;
float minStrength = 0.125;

float speed = 1.00;
float offsetSpeed = 6.00;

float flashSpeed = 2.0;


float scanLines (vec2 noise)
{
    return fract(sin(dot(noise.xy*1000.1, vec2(10, 10.0 + sin(iTime) * 350.0)) + iTime) - iTime) + 
    fract(sin(dot(noise.xy,vec2(0.0001,98.233)))*12073103.285) -
    fract(abs(cos(dot(noise.xy,vec2(3.5,98.233)))*6.285)) +
    fract(sin(dot(noise.xy/300.0, vec2(0, 10)) + sin(iTime * flashSpeed) * flashSpeed * 4.0));
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    vec2 uv2 = fract(fragCoord.xy/iResolution.xy*fract(abs(sin(iTime*speed) - sin(iTime*speed * offsetSpeed))));

    // Time varying pixel color
    //vec3 colour = vec3((random(uv2.xy) + scanLines(uv2.xy)))*maxStrength * 0.5;
    vec3 colour = vec3(scanLines(uv2.xy))*maxStrength * 0.5;
    colour.b *= 0.8;
   
    vec3 background = vec3(texture(iChannel0, uv));

    // Output to screen
    fragColor = vec4(background - colour,1.0);
    
}